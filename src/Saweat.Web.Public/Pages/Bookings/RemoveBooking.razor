@using Saweat.Application.Handlers.Commands.Bookings
@inject IMediator _mediator;
@inject DialogService dialogService;

<style>
    form .row {
        margin-bottom: 16px;
    }
</style>
<RadzenTemplateForm TItem="Booking" Data="@_booking" Submit="@OnSubmit">
    <RadzenHeading Size="H1" Text="Cancelar" />
    <p />
    <div class="row">
        <div class="col-md-4 align-items-center d-flex">
            <RadzenLabel Text="Codigo" />
        </div>
        <div class="col-md-8" >
            <RadzenTextBox @bind-Value="@_booking.Code" Name="Code" style="width: 100%;"/>
        </div>
    </div>
    <RadzenButton ButtonStyle="ButtonStyle.Danger" ButtonType="ButtonType.Button" Text="Cancelar" Click="@OnSubmit" />
</RadzenTemplateForm>
@code {
    private Booking _booking = new();

    private async Task OnSubmit()
    {
        var response = await _mediator.Send(new CancelBookingRequest { Code = _booking.Code });
        var message = response.Data
            ? "Su reserva ha quedado cancelada."
            : "No se ha encontrado una reserva con el codigo indicado.";
        await dialogService.OpenAsync<BookingMessage>("Aviso", new Dictionary<string, object> { { "Message", message } });
        _booking = new();
    }
}
